{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Pytest",
      "type": "shell",
      "command": "python3 -m pytest --timeout=10 tests",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Pytest (changed tests only)",
      "type": "shell",
      "command": "python3 -m pytest --timeout=10 --picked",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Ruff",
      "type": "shell",
      "command": "pre-commit run ruff --all-files",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Pylint",
      "type": "shell",
      "command": "pylint app --output-format=colorized --disable=R0903",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Code Coverage",
      "detail": "Generate code coverage report.",
      "type": "shell",
      "command": "python3 -m pytest --cov --cov-report term-missing --durations-min=1 --durations=0",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Install all requirements",
      "type": "shell",
      "command": "pip3 install -r requirements.txt && pip3 install -r requirements.dev.txt",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Babel update",
      "type": "shell",
      "command": "pybabel extract -F babel.cfg -o messages.pot . && pybabel update -i messages.pot -d app/translations",
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Babel compile",
      "type": "shell",
      "command": "pybabel compile -d app/translations",
      "group": {
        "kind": "build",
        "isDefault": true
      }
    }
  ]
}
